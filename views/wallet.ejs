<div class="game-theme">
<div class="container pt-4">
  <div class="balance-card">
    <div class="balance-header">
      <div class="user-uid">UID: <%= user.uid %></div>
      <div class="balance-amount">
        <span class="amount-text">â‚¹<span id="userBalance"><%= user.balance %></span></span>
        <button class="refresh-btn" onclick="refreshBalance()">ðŸ”„</button>
      </div>
    </div>
  </div>

  <div class="action-buttons">
    <button class="btn-action btn-deposit" data-bs-toggle="modal" data-bs-target="#depositModal">
      Deposit
    </button>
    <button class="btn-action btn-withdraw" data-bs-toggle="modal" data-bs-target="#withdrawModal">
      Withdrawal
    </button>
  </div>

  <div class="transactions-section">
    <h4>Transaction History</h4>
    <div class="transaction-list">
    <% transactions.forEach(function(transaction) { %>
      <div class="transaction-item">
        <div class="transaction-main">
          <div class="transaction-time">
            <%= transaction.date.toLocaleString('en-IN', { 
              hour: '2-digit',
              minute: '2-digit',
              hour12: true,
              day: 'numeric',
              month: 'short',
              timeZone: 'Asia/Kolkata'
            }) %>
          </div>
          <div class="transaction-amount <%= transaction.type === 'deposit' ? 'amount-deposit' : 'amount-withdraw' %>">
            <%= transaction.type === 'deposit' ? '+' : '-' %>â‚¹<%= transaction.amount %>
          </div>
        </div>
        <div class="transaction-details">
          <div class="transaction-status">
            <%= (transaction.status || 'completed').charAt(0).toUpperCase() + (transaction.status || 'completed').slice(1) %>
          </div>
          <div class="transaction-id">
            Order ID: <%= transaction.orderNumber || 'N/A' %>
          </div>
        </div>
      </div>
    <% }); %>
  </div>

  <!-- Deposit Modal -->
  <div class="modal fade" id="depositModal">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Deposit Money</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <div class="amount-buttons mb-3">
            <div class="d-flex flex-wrap gap-2">
              <% [100, 200, 300, 500, 1000, 2000, 5000].forEach(amount => { %>
                <button class="btn btn-outline-primary select-amount-btn" data-amount="<%= amount %>">â‚¹<%= amount %></button>
              <% }); %>
            </div>
            <button id="payButton" class="btn btn-success w-100 mt-3" style="display: none;">Pay Now</button>
          </div>
          <div id="qrCode" class="text-center mb-3" style="display: none;">
            <img id="qrImage" class="mb-2" style="max-width: 200px;">
            <div class="alert alert-info">
              Scan this QR code to pay â‚¹<span id="selectedAmount"></span><br>
              UPI ID: sukd738@ybl
            </div>
            <div class="alert alert-warning">
              After payment, verify using Note: <span id="noteCode" class="fw-bold"></span>
            </div>
          </div>
          <form id="utrForm" action="/wallet/deposit" method="POST" style="display: none;">
            <input type="hidden" name="amount" id="amountInput">
            <input type="hidden" name="note" id="noteInput">
            <input type="hidden" name="orderId" id="orderIdInput">
            <div class="mb-3">
              <label class="form-label">Enter UTR (12-digit Transaction ID)</label>
              <input type="text" name="utr" class="form-control" pattern="[0-9]{12}" maxlength="12" required>
              <div class="form-text">Enter the 12-digit UTR number received after payment</div>
            </div>
            <button type="submit" class="btn btn-success w-100">Verify Payment</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Withdraw Modal -->
  <div class="modal fade" id="withdrawModal">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Withdraw Money</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <form action="/wallet/withdraw" method="POST" id="withdrawForm">
          <div class="modal-body">
            <div class="mb-3">
              <label class="form-label">Amount (â‚¹)</label>
              <input type="number" name="amount" class="form-control" required min="100" max="50000" step="1" 
              oninput="this.value = Math.round(this.value);"
              onkeypress="return event.charCode >= 48 && event.charCode <= 57">
              <div class="form-text">Min: â‚¹100, Max: â‚¹50,000</div>
            </div>
            <% if (!user.bankDetails?.accountNumber) { %>
              <div class="mb-3">
                <label class="form-label">Account Number</label>
                <input type="text" name="accountNumber" class="form-control" required>
              </div>
              <div class="mb-3">
                <label class="form-label">IFSC Code</label>
                <input type="text" name="ifscCode" class="form-control" required>
              </div>
              <div class="mb-3">
                <label class="form-label">Account Holder Name</label>
                <input type="text" name="holderName" class="form-control" required>
              </div>
            <% } else { %>
              <div class="mb-3">
                <label class="form-label">Bank Account</label>
                <input type="text" class="form-control" value="<%= user.bankDetails.accountNumber %>" readonly>
              </div>
            <% } %>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-warning">Withdraw</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
async function refreshBalance() {
  try {
    const response = await fetch('/wallet/balance');
    const data = await response.json();
    document.getElementById('userBalance').textContent = data.balance;
  } catch (error) {
    console.error('Error refreshing balance:', error);
  }
}

let selectedAmount = null;

document.querySelectorAll('.select-amount-btn').forEach(btn => {
  btn.addEventListener('click', () => {
    document.querySelectorAll('.select-amount-btn').forEach(b => b.classList.remove('active'));
    btn.classList.add('active');
    selectedAmount = btn.dataset.amount;
    document.getElementById('payButton').style.display = 'block';
  });
});

document.getElementById('payButton').addEventListener('click', async () => {
  if (!selectedAmount) return;

  // Generate QR and note
  const qrResponse = await fetch(`/wallet/generate-qr?amount=${selectedAmount}`);
  const qrData = await qrResponse.json();

  // Create deposit order
  const depositResponse = await fetch('/wallet/create-deposit', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      amount: selectedAmount,
      note: qrData.note
    })
  });
  const depositData = await depositResponse.json();

  // Update UI
  document.getElementById('selectedAmount').textContent = selectedAmount;
  document.getElementById('amountInput').value = selectedAmount;
  document.getElementById('qrImage').src = qrData.qrCode;
  document.getElementById('noteInput').value = qrData.note;
  document.getElementById('noteCode').textContent = qrData.note;
  document.getElementById('orderIdInput').value = depositData.orderId;
  document.getElementById('qrCode').style.display = 'block';
  document.getElementById('utrForm').style.display = 'block';
});
</script>